@model IEnumerable<Employee>
@inject IEmployeeRepository IEmployeeRepository

@{
    ViewData["Title"] = "Index";

}
<h2>Home Index</h2>

<div class="card-deck row">
    @foreach (var employee in Model)
    {
        <div class="m-3" style="width:30%;border:solid;border-color:bisque">
            <div class="alert bg-danger text-dark">
                <h3 class="col-lg-10 m-1">@employee.Name</h3>
            </div>
            @{
                var EmployImage = "";
                if (employee.PhotoPath == string.Empty || employee.PhotoPath == null)
                {
                    EmployImage = "/images/noimage.png"; //~/ images / noimage.png
                }
                else { EmployImage = "/images/" + employee.PhotoPath; }

            }
            <div class="col-lg-12" style="padding-left: 0px;padding-right: 0px;">
                <img class="card-img-top col-lg-12" src="@EmployImage"
                     style="height: 150px;padding-bottom: 5px;
                          padding-left: 0px;padding-right: 0px;">
            </div>
            <div class="card-footer text-center col-lg-12">
                <a class="btn btn-primary col-lg-9 m-1 "
                   asp-controller="Home" asp-action="Details" asp-route-id="@employee.Id">View</a>
                <a class="btn btn-info col-lg-9 m-1"
                   asp-controller="Home" asp-action="Edit" asp-route-id="@employee.Id">Edit</a>
                <a class="btn btn-danger col-lg-9 m-1"
                   asp-controller="Home" asp-action="Delete" asp-route-id="@employee.Id">Delete</a>
            </div>
        </div>
    }
</div>

@*
    <table class="table table-active table-bordered table-bordered">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Id)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Email)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Department)
                </th>
                <th>Operations</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Id)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Email)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Department)
                    </td>
                    <td>
                        @Html.ActionLink("Edit", "Edit", new { Id = item.Id }) |
                        @Html.ActionLink("Details", "Details", new { Id = item.Id }) |
                        @Html.ActionLink("Delete", "Delete", new { Id = item.Id })
                    </td>
                </tr>
            }
        </tbody>
    </table>
*@
<div class="alert alert-danger h2">
    Total Count of Employee : <span class="h3"> @IEmployeeRepository.GetAllEmployee().Count() </span>

</div>